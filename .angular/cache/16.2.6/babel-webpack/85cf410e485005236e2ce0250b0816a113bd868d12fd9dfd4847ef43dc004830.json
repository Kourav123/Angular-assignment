{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nexport class ClientManagementComponent {\n  constructor(router) {\n    this.router = router;\n    this.clientName = '';\n    this.clientEmail = '';\n    this.clientAddress = '';\n    this.clientPassword = '';\n    this.clientRepeatPassword = '';\n  }\n  registerClient() {\n    // Here, you can implement the logic to send the client data to the server using Angular HttpClient.\n    // You can access the values like this.clientName and this.clientEmail.\n    console.log('Client Name:', this.clientName);\n    console.log('Client Email:', this.clientEmail);\n    window.alert('Meeting registered successfully!'); // Show alert on successful registration\n  }\n\n  cancelRegistration() {\n    // Implement the logic to cancel the registration here.\n    console.log('Registration canceled.');\n    window.alert('MeetingcancelRegistration  successfully!'); // Show alert on successful registration\n    this.router.navigate(['/']); // Replace '/' with your homepage route if different\n  }\n  static #_ = this.ɵfac = function ClientManagementComponent_Factory(t) {\n    return new (t || ClientManagementComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClientManagementComponent,\n    selectors: [[\"app-client-management\"]],\n    decls: 42,\n    vars: 5,\n    consts: [[\"id\", \"client-form\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"client-name\"], [\"type\", \"text\", \"id\", \"client-name\", \"name\", \"clientName\", \"required\", \"\", \"placeholder\", \"Enter Name\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"client-email\"], [\"type\", \"email\", \"id\", \"client-email\", \"name\", \"clientEmail\", \"placeholder\", \"Enter Email\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"client-Address\"], [\"type\", \"Address\", \"id\", \"client-Address\", \"name\", \"clientAddress\", \"placeholder\", \"Enter Address\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"client-passwaod\"], [\"type\", \"Password\", \"id\", \"client-passwaod\", \"name\", \"clientPassword\", \"placeholder\", \"Enter Password\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"client-Repeat-Password\"], [\"type\", \"password\", \"id\", \"client-repeat-password\", \"name\", \"clientRepratPassword\", \"placeholder\", \"Enter Repeat-Password\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Register\", 1, \"custom-button\"], [\"type\", \"button\", \"value\", \"Cancel\", 1, \"custom-button1\", 3, \"click\"]],\n    template: function ClientManagementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"client-management works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"section\", 0)(3, \"h1\");\n        i0.ɵɵtext(4, \"Create a Client\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h6\");\n        i0.ɵɵtext(6, \"Please fill in this form to create a client\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 1);\n        i0.ɵɵlistener(\"submit\", function ClientManagementComponent_Template_form_submit_7_listener() {\n          return ctx.registerClient();\n        });\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 3);\n        i0.ɵɵtext(10, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"br\");\n        i0.ɵɵelementStart(12, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ClientManagementComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.clientName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"div\", 2)(16, \"label\", 5);\n        i0.ɵɵtext(17, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"br\");\n        i0.ɵɵelementStart(19, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function ClientManagementComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.clientEmail = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(20, \"br\");\n        i0.ɵɵelementStart(21, \"div\", 2)(22, \"label\", 7);\n        i0.ɵɵtext(23, \"Address:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"br\");\n        i0.ɵɵelementStart(25, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function ClientManagementComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.clientAddress = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(26, \"br\");\n        i0.ɵɵelementStart(27, \"div\", 2)(28, \"label\", 9);\n        i0.ɵɵtext(29, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"br\");\n        i0.ɵɵelementStart(31, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function ClientManagementComponent_Template_input_ngModelChange_31_listener($event) {\n          return ctx.clientPassword = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(32, \"br\");\n        i0.ɵɵelementStart(33, \"div\", 2)(34, \"label\", 11);\n        i0.ɵɵtext(35, \"Repeat Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"br\");\n        i0.ɵɵelementStart(37, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function ClientManagementComponent_Template_input_ngModelChange_37_listener($event) {\n          return ctx.clientRepeatPassword = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(38, \"br\");\n        i0.ɵɵelementStart(39, \"div\", 2);\n        i0.ɵɵelement(40, \"input\", 13);\n        i0.ɵɵelementStart(41, \"input\", 14);\n        i0.ɵɵlistener(\"click\", function ClientManagementComponent_Template_input_click_41_listener() {\n          return ctx.cancelRegistration();\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.clientName);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.clientEmail);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.clientAddress);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.clientPassword);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.clientRepeatPassword);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n    styles: [\"\\n\\n#client-form[_ngcontent-%COMP%] {\\n    margin: 20px;\\n  }\\n  \\n  form[_ngcontent-%COMP%] {\\n    background-color: #f4f4f4;\\n    padding: 20px;\\n    border-radius: 5px;\\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  \\n\\n  .form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n    display: block;\\n  }\\n  \\n  input[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"email\\\"][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    margin: 5px 0;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n  }\\n  \\n  input[type=\\\"submit\\\"][_ngcontent-%COMP%], input[type=\\\"button\\\"][_ngcontent-%COMP%] {\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 10px 20px;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  .custom-button1[_ngcontent-%COMP%] {\\n    background-color: #e74c3c;\\n    margin-left: 10px;\\n  }\\n  \\n  \\n\\n  header[_ngcontent-%COMP%] {\\n    background-color: #333;\\n    color: #fff;\\n    text-align: center;\\n    padding: 10px 0;\\n  }\\n  \\n  footer[_ngcontent-%COMP%] {\\n    background-color: #333;\\n    color: #fff;\\n    text-align: center;\\n    padding: 10px 0;\\n  }\\n  \\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2xpZW50LW1hbmFnZW1lbnQvY2xpZW50LW1hbmFnZW1lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxQ0FBcUM7QUFDckM7SUFDSSxZQUFZO0VBQ2Q7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQix3Q0FBd0M7RUFDMUM7O0VBRUEsa0NBQWtDO0VBQ2xDO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLGNBQWM7RUFDaEI7O0VBRUE7Ozs7SUFJRSxXQUFXO0lBQ1gsYUFBYTtJQUNiLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0VBQ3BCOztFQUVBOztJQUVFLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixpQkFBaUI7RUFDbkI7O0VBRUEsZ0NBQWdDO0VBQ2hDO0lBQ0Usc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGVBQWU7RUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBcHBseSBnZW5lcmFsIHN0eWxlcyB0byB0aGUgZm9ybSAqL1xyXG4jY2xpZW50LWZvcm0ge1xyXG4gICAgbWFyZ2luOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICBmb3JtIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAycHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB9XHJcbiAgXHJcbiAgLyogQXBwbHkgc3R5bGVzIHRvIGZvcm0gZWxlbWVudHMgKi9cclxuICAuZm9ybS1ncm91cCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICBsYWJlbCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxuICBcclxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcclxuICBpbnB1dFt0eXBlPVwiZW1haWxcIl0sXHJcbiAgdGV4dGFyZWEsXHJcbiAgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIH1cclxuICBcclxuICBpbnB1dFt0eXBlPVwic3VibWl0XCJdLFxyXG4gIGlucHV0W3R5cGU9XCJidXR0b25cIl0ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLmN1c3RvbS1idXR0b24xIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNzRjM2M7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLyogU3R5bGUgdGhlIGhlYWRlciBhbmQgZm9vdGVyICovXHJcbiAgaGVhZGVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDEwcHggMDtcclxuICB9XHJcbiAgXHJcbiAgZm9vdGVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDEwcHggMDtcclxuICB9XHJcbiAgXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["ClientManagementComponent","constructor","router","clientName","clientEmail","clientAddress","clientPassword","clientRepeatPassword","registerClient","console","log","window","alert","cancelRegistration","navigate","_","i0","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","ClientManagementComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ClientManagementComponent_Template_form_submit_7_listener","ɵɵelement","ClientManagementComponent_Template_input_ngModelChange_12_listener","$event","ClientManagementComponent_Template_input_ngModelChange_19_listener","ClientManagementComponent_Template_input_ngModelChange_25_listener","ClientManagementComponent_Template_input_ngModelChange_31_listener","ClientManagementComponent_Template_input_ngModelChange_37_listener","ClientManagementComponent_Template_input_click_41_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\user\\Desktop\\Angular-assignment\\src\\app\\client-management\\client-management.component.ts","C:\\Users\\user\\Desktop\\Angular-assignment\\src\\app\\client-management\\client-management.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-client-management',\r\n  templateUrl: './client-management.component.html',\r\n  styleUrls: ['./client-management.component.css']\r\n})\r\nexport class ClientManagementComponent {\r\n  clientName: string = '';\r\n  clientEmail: string = '';\r\n  clientAddress:string='';\r\n  clientPassword: string='';\r\n  clientRepeatPassword:string='';\r\n  constructor(private router: Router) {}\r\n\r\n  registerClient() {\r\n    // Here, you can implement the logic to send the client data to the server using Angular HttpClient.\r\n    // You can access the values like this.clientName and this.clientEmail.\r\n    console.log('Client Name:', this.clientName);\r\n    console.log('Client Email:', this.clientEmail);\r\n      window.alert('Meeting registered successfully!'); // Show alert on successful registration\r\n\r\n  }\r\n\r\n  cancelRegistration() {\r\n    // Implement the logic to cancel the registration here.\r\n    console.log('Registration canceled.');\r\n    window.alert('MeetingcancelRegistration  successfully!'); // Show alert on successful registration\r\n   this.router.navigate(['/']); // Replace '/' with your homepage route if different\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n","<p>client-management works!</p>\r\n<section id=\"client-form\">\r\n    <h1>Create a Client</h1>\r\n    <h6>Please fill in this form to create a client</h6>\r\n    <form (submit)=\"registerClient()\">\r\n        <div class=\"form-group\">\r\n            <label for=\"client-name\">Name:</label><br>\r\n            <input type=\"text\" id=\"client-name\" [(ngModel)]=\"clientName\" name=\"clientName\" required placeholder=\"Enter Name\"><br>\r\n        </div><br>\r\n        <div class=\"form-group\">\r\n            <label for=\"client-email\">Email:</label><br>\r\n            <input type=\"email\" id=\"client-email\" [(ngModel)]=\"clientEmail\" name=\"clientEmail\" placeholder=\"Enter Email\"/>\r\n        </div><br>\r\n         <div class=\"form-group\">\r\n            <label for=\"client-Address\">Address:</label><br>\r\n            <input type=\"Address\" id=\"client-Address\" [(ngModel)]=\"clientAddress\" name=\"clientAddress\" placeholder=\"Enter Address\"/>\r\n        </div><br>\r\n        <div class=\"form-group\">\r\n            <label for=\"client-passwaod\">Password:</label><br>\r\n            <input type=\"Password\" id=\"client-passwaod\" [(ngModel)]=\"clientPassword\" name=\"clientPassword\" placeholder=\"Enter Password\"/>\r\n        </div><br>\r\n        <div class=\"form-group\">\r\n            <label for=\"client-Repeat-Password\">Repeat Password:</label><br>\r\n           <input type=\"password\" id=\"client-repeat-password\" [(ngModel)]=\"clientRepeatPassword\" name=\"clientRepratPassword\" placeholder=\"Enter Repeat-Password\"/>\r\n        </div><br>\r\n           <!-- Add the rest of your form fields similarly -->\r\n        <div class=\"form-group\">\r\n            <input type=\"submit\" value=\"Register\" class=\"custom-button\">\r\n            <input type=\"button\" (click)=\"cancelRegistration()\" value=\"Cancel\" class=\"custom-button1\">\r\n        </div>\r\n    </form>\r\n</section>\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}